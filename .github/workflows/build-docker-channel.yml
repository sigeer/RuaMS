name: Docker-Channel

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  push:
    tags:
      - '*'
  workflow_dispatch:  # <-- 手动触发

env:
  # Use docker.io for Docker Hub if empty
  GHCR_REGISTRY: ghcr.io
  DOCKERHUB_OWNER_NAME: sigeer
  GHCR_OWNER_NAME: sigeer
  IMAGE_NAME: ruams-channel

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: get latest version
        run: |
          VERSION=$(grep -oP '<Version>\K[^<]+' Directory.Build.props)
          echo "VERSION=${VERSION}" >> $GITHUB_ENV

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: .
          tags: |
            ${{ env.DOCKERHUB_OWNER_NAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.DOCKERHUB_OWNER_NAME }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.REGISTRY }}/${{ env.GHCR_OWNER_NAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
            ${{ env.REGISTRY }}/${{ env.GHCR_OWNER_NAME }}/${{ env.IMAGE_NAME }}:latest
          file: ./src/Application.Host.Channel/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
