syntax = "proto3";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "Base/BoolWrapper.proto";

import "Base/MonsterCardData.proto";
import "Dto/Drop.proto";
import "Dto/Note.proto";
import "Dto/Shop.proto";

import "ChatRoom/ChatRoom.proto";

import "Invitation/AnswerInvite.proto";
import "Invitation/CreateInvite.proto";

import "Expedition/ExpeditionRegistry.proto";
import "Expedition/ExpeditionEntry.proto";
import "Expedition/ExpeditionInfo.proto";

import "Dto/NewYearCard.proto";
import "Item/Gachapon.proto";
import "Item/SkillBook.proto";

import "Dto/NameChange.proto";
import "Message/YellowTip.proto";
import "Item/CDK.proto";
import "Events/ReloadEvents.proto";
import "Rank/RankCharacter.proto";
import "Item/HiredMerchant.proto";
import "Dto/Report.proto";
import "Config/MonitorConfig.proto";
import "Config/CouponConfig.proto";
import "Lives/DBLife.proto";


package ServiceProto;

service GameService {
	rpc CheckCharacterName(CheckCharacterNameRequest) returns(BaseProto.BoolWrapper);
	rpc ChangeName(Dto.NameChangeRequest) returns(Dto.NameChangeResponse);

	rpc LoadReactorDropData(google.protobuf.Empty) returns(Dto.DropAllDto);
	rpc LoadMobDropData(google.protobuf.Empty) returns(Dto.DropAllDto);
	rpc LoadMonsterCardData(google.protobuf.Empty) returns(BaseProto.QueryMonsterCardDataResponse);
	rpc LoadGachaponData(google.protobuf.Empty) returns(ItemProto.GacheponDataDto);
	rpc LoadReactorSkillBookData(google.protobuf.Empty) returns(ItemProto.ReactorSkillBookDto);

	rpc SendNote(Dto.SendNormalNoteRequest) returns(BaseProto.BoolWrapper);
	rpc SetNoteRead(Dto.SetNoteReadRequest) returns(Dto.SetNoteReadResponse);

	rpc GetShop(Dto.GetShopRequest) returns(Dto.GetShopResponse);

	rpc JoinChatRoom(Dto.JoinChatRoomRequest) returns(google.protobuf.Empty);
	rpc LeaveChatRoom(Dto.LeaveChatRoomRequst) returns(google.protobuf.Empty);
	rpc SendChatRoomMessage(Dto.SendChatRoomMessageRequest) returns(google.protobuf.Empty);
	rpc CreateChatRoom(Dto.CreateChatRoomRequest) returns(google.protobuf.Empty);

	rpc SendInvitation(InvitationProto.CreateInviteRequest) returns (google.protobuf.Empty);
	rpc AnswerInvitation(InvitationProto.AnswerInviteRequest) returns (google.protobuf.Empty);

	rpc RegisterExpedition(ExpeditionProto.ExpeditionRegistry) returns (google.protobuf.Empty);
	rpc CheckExpedition(ExpeditionProto.ExpeditionCheckRequest) returns (ExpeditionProto.ExpeditionCheckResponse);
	rpc GetExpeditionInfo(google.protobuf.Empty) returns(ExpeditionProto.QueryChannelExpedtionResponse);

	rpc SendNewyearCard(Dto.SendNewYearCardRequest) returns (google.protobuf.Empty);
	rpc RecevieNewyearCard(Dto.ReceiveNewYearCardRequest) returns (google.protobuf.Empty);
	rpc DiscardNewyearCard(Dto.DiscardNewYearCardRequest) returns (google.protobuf.Empty);

	rpc SendYellowTip(MessageProto.YellowTipRequest) returns (google.protobuf.Empty);
	rpc UseCDK(ItemProto.UseCdkRequest) returns(ItemProto.UseCdkResponse);

	rpc ReloadEvents(Dto.ReloadEventsRequest) returns(google.protobuf.Empty);
	rpc LoadCharacterRank(RankProto.LoadCharacterRankRequest) returns(RankProto.LoadCharacterRankResponse);

	rpc LoadPlayerHiredMerchant(ItemProto.GetPlayerHiredMerchantRequest) returns(ItemProto.RemoteHiredMerchantDto);
	rpc CommitRetrievedFromFredrick(ItemProto.CommitRetrievedRequest) returns(ItemProto.CommitRetrievedResponse);
	rpc CanHiredMerchant (ItemProto.CanHiredMerchantRequest) returns(ItemProto.CanHiredMerchantResponse);

	rpc SetMonitor(Config.ToggleMonitorPlayerRequest) returns(Config.ToggleMonitorPlayerResponse);
	rpc LoadMonitor(google.protobuf.Empty) returns(Config.MonitorDataWrapper);

	rpc SendToggleCoupon(Config.ToggelCouponRequest) returns (google.protobuf.Empty);

	rpc GetAllPLife(LifeProto.GetAllPLifeRequest) returns(LifeProto.GetAllPLifeResponse);
	rpc GetLifeByMapId(LifeProto.GetPLifeByMapIdRequest) returns(LifeProto.GetPLifeByMapIdResponse);
	rpc CreateLife(LifeProto.CreatePLifeRequest) returns(google.protobuf.Empty);
	rpc RemoveLife(LifeProto.RemovePLifeRequest) returns(google.protobuf.Empty);
}

message CheckCharacterNameRequest {
	string name = 1;
}
